// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package product.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the Product module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_AssignCategoryBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Product.ACT_AssignCategory");
		return builder;
	}

	public static void aCT_AssignCategory(IContext context)
	{
		aCT_AssignCategoryBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Apply_FilterBuilder(
		product.proxies.ProducttFilterHelper _producttFilterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Product.DS_Apply_Filter");
		builder = builder.withParam("ProducttFilterHelper", _producttFilterHelper);
		return builder;
	}

	public static void dS_Apply_Filter(
		IContext context,
		product.proxies.ProducttFilterHelper _producttFilterHelper
	)
	{
		dS_Apply_FilterBuilder(
				_producttFilterHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Filtered_ProductsBuilder(
		product.proxies.ProducttFilterHelper _producttFilterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Product.DS_Filtered_Products");
		builder = builder.withParam("ProducttFilterHelper", _producttFilterHelper);
		return builder;
	}

	public static java.util.List<product.proxies.Brick> dS_Filtered_Products(
		IContext context,
		product.proxies.ProducttFilterHelper _producttFilterHelper
	)
	{
		Object result = dS_Filtered_ProductsBuilder(
				_producttFilterHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> product.proxies.Brick.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_ProductFilterHelperBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Product.DS_ProductFilterHelper");
		return builder;
	}

	public static product.proxies.ProducttFilterHelper dS_ProductFilterHelper(IContext context)
	{
		Object result = dS_ProductFilterHelperBuilder().execute(context);
		return result == null ? null : product.proxies.ProducttFilterHelper.initialize(context, (IMendixObject) result);
	}
}
